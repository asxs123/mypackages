#
# This is free software, lisence use MIT.
# 
# 
# <https://github.com/kiddin9/openwrt-packages>
#

name: Merge-upstream 合并上游
on:
  # 当代码推送到仓库时触发。
  # push:
  #   # 指定文件路径会触发工作流程
  #   paths:
  #     - '.github/workflows/upstream.yml'
  #     - '.gitignore'
  #     - '.github/diy/**'
  # # 按计划定期触发，例如每 12 小时一次。
  # schedule:
  #   - cron: 0 */12 * * *
  # 允许手动触发工作流程。
  workflow_dispatch:
    inputs:
      ssh:
        description: 'ssh'
        required: false
        default: 'false'
  # # 当仓库被关注时触发。
  # watch:
  #   types: started
  # # 通过外部事件触发。
  # repository_dispatch:

jobs:
  merge:
    # if: github.event.repository.owner.id == github.event.sender.id || ! github.event.sender.id || github.event.sender.id == '119362912'
    runs-on: Ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@main
      with:
        fetch-depth: 0

    # - uses: de-vri-es/setup-git-credentials@v2
    #   with:
    #     credentials: https://asxs123:${{ secrets.TOKEN_asxs123 }}@github.com/
    
    - name: Set git identity 设置git标识
      run : |
        git config --global user.email "54346276+asxs123@users.noreply.github.com"
        git config --global user.name "github-actions[bot]"
        sudo timedatectl set-timezone "Asia/Shanghai"

    - name: Syn upstream  同步上游
      run: |
        # 启用扩展的模式匹配
        shopt -s extglob
        # 关闭脚本中的错误终止
        set +e
        # 从缓存中删除所有文件,不显示任何输出
        git rm -r --cache * >/dev/null 2>&1 &
        # 删除除 .github/diy 以外的所有文件夹。find 查找当前目录下的所有文件夹，-maxdepth 0 只搜索当前目录，-type d 只搜索文件夹，! -name ".github/diy" 排除名为 .github/diy 的文件夹。
        rm -rf `find ./* -maxdepth 0 -type d ! -name ".github/diy"` >/dev/null 2>&1
        function git_clone() {
          # 克隆指定仓库 --depth 1 只克隆最近一次提交 $1 和 $2 是函数的参数，分别表示仓库 URL 和目标目录。
          git clone --depth 1 $1 $2
          if [ "$?" != 0 ]; then
            # 命令执行失败,输出错误信息,获取当前进程的 PID,终止当前进程
            echo "error on $1"
            pid="$( ps -q $$ )"
            kill $pid
          fi
        }
        function git_sparse_clone() {
          # 将函数的前三个参数分别赋值给变量 branch、rurl 和 localdir，然后移除这三个参数，以便后续的参数处理
          branch="$1" rurl="$2" localdir="$3" && shift 3
          # 克隆指定分支的仓库  -b $branch：克隆的分支  --depth 1：克隆最近一次提交  --filter=blob:none：只克隆文件结构  --sparse：稀疏克隆模式  $rurl：仓库的 URL  $localdir：目标本地目录
          git clone -b $branch --depth 1 --filter=blob:none --sparse $rurl $localdir
          if [ "$?" != 0 ]; then
            echo "error on $rurl"
            pid="$( ps -q $$ )"
            kill $pid
          fi
          # 切换到目标本地目录
          cd $localdir
          # 初始化稀疏检出模式
          git sparse-checkout init --cone
          # 设置要检出的文件
          git sparse-checkout set $@
          # 将文件移动到上一级目录，如果移动失败则继续执行
          mv -n $@ ../ || true
          # 返回上一级目录
          cd ..
          # 删除目标本地目录
          rm -rf $localdir
          }
        function git_sparse_clone2() {
          commitid="$1" rurl="$2" localdir="$3" && shift 3
          git clone --filter=blob:none --sparse $rurl $localdir
          cd $localdir
          # 检出指定的提交 ID
          git checkout $commitid
          git sparse-checkout init --cone
          git sparse-checkout set $@
          mv -n $@ ../ || true
          cd ..
          rm -rf $localdir
          }
        function mvdir() {
        # 将指定目录下的所有文件夹移动到当前目录
        mv -n `find $1/* -maxdepth 0 -type d` ./
        # 删除指定目录及其内容
        rm -rf $1
        }
        (
          git_clone https://github.com/rufengsuixing/luci-app-adguardhome
          git_clone https://github.com/UnblockNeteaseMusic/luci-app-unblockneteasemusic
        )
        # (
        # git_clone https://github.com/kiddin9/my-packages && mvdir my-packages
        # git_clone https://github.com/kiddin9/openwrt-bypass && mvdir openwrt-bypass
        # git_clone https://github.com/kiddin9/luci-app-dnsfilter
        # git_clone https://github.com/kiddin9/aria2
        # git_clone https://github.com/kiddin9/luci-theme-edge
        # git_clone https://github.com/kiddin9/autoshare && mvdir autoshare
        # git_clone https://github.com/kiddin9/luci-app-xlnetacc
        # git_clone https://github.com/kiddin9/luci-app-wizard
        # git_clone https://github.com/kiddin9/openwrt-adguardhome && mvdir openwrt-adguardhome
        # git_clone https://github.com/kiddin9/luci-app-cloudreve
        # ) &
        # (
        # git_clone https://github.com/xiaorouji/openwrt-passwall && mvdir openwrt-passwall
        # git clone https://github.com/fw876/helloworld && rm -rf helloworld/{v2raya,naiveproxy} && mvdir helloworld
        # git_clone https://github.com/Lienol/openwrt-package liep
        # git clone https://github.com/AutoCONFIG/minieap-openwrt -b default
        # git_clone https://github.com/rufengsuixing/luci-app-autoipsetadder
        # git_clone https://github.com/NateLol/luci-app-beardropper
        # git_clone https://github.com/riverscn/openwrt-iptvhelper && mvdir openwrt-iptvhelper
        # ) &
        (
        # git_clone https://github.com/jerrykuku/luci-theme-argon
        # git_clone https://github.com/jerrykuku/luci-app-argon-config
        # #git_clone https://github.com/jerrykuku/luci-app-vssr
        # #git_clone https://github.com/jerrykuku/luci-app-ttnode
        # git_clone https://github.com/sirpdboy/luci-app-advancedplus
        # git_clone https://github.com/sirpdboy/luci-app-autotimeset
        # git_clone https://github.com/sirpdboy/luci-app-lucky oplucky && mv -f oplucky/*/ ./ && rm -rf oplucky
        # git_clone https://github.com/sirpdboy/luci-app-partexp
        git_clone https://github.com/sirpdboy/luci-app-ddns-go ddns-go1 && mvdir ddns-go1
        # git_clone https://github.com/sirpdboy/netspeedtest && mv -n netspeedtest/luci-app-netspeedtest ./ ; rm -rf netspeedtest
        # git_clone https://github.com/sirpdboy/luci-app-parentcontrol
        # git_clone https://github.com/sirpdboy/luci-app-poweroffdevice
        ) &
        # (
        # git_clone https://github.com/destan19/OpenAppFilter && mvdir OpenAppFilter
        # git_clone https://github.com/lvqier/luci-app-dnsmasq-ipset
        # git_clone https://github.com/walkingsky/luci-wifidog luci-app-wifidog
        # git_clone https://github.com/peter-tank/luci-app-autorepeater
        # # git_clone https://github.com/CCnut/feed-netkeeper && mvdir feed-netkeeper
        # git_clone https://github.com/brvphoenix/luci-app-wrtbwmon wrtbwmon1 && mvdir wrtbwmon1
        # git_clone https://github.com/brvphoenix/wrtbwmon wrtbwmon2 && mvdir wrtbwmon2
        # git_clone https://github.com/LGA1150/openwrt-sysuh3c && mvdir openwrt-sysuh3c
        # git_clone https://github.com/gdck/luci-app-cupsd cupsd1 && mv -n cupsd1/luci-app-cupsd ./ ; rm -rf cupsd1
        # #git_clone https://github.com/QiuSimons/openwrt-mos && mv -n openwrt-mos/{*mosdns,v2ray-geodata} ./ ; rm -rf openwrt-mos
        # git_clone https://github.com/sbwml/luci-app-mosdns openwrt-mos && mv -n openwrt-mos/{*mosdns,v2dat} ./; rm -rf openwrt-mos
        # ) &
        # (
        # git_clone https://github.com/esirplayground/LingTiGameAcc
        # git_clone https://github.com/esirplayground/luci-app-LingTiGameAcc
        # git_clone https://github.com/zxlhhyccc/luci-app-v2raya
        # git_clone https://github.com/jerrykuku/luci-app-go-aliyundrive-webdav
        # git_clone https://github.com/SSSSSimon/tencentcloud-openwrt-plugin-ddns && mv -n tencentcloud-openwrt-plugin-ddns/tencentcloud_ddns ./luci-app-tencentddns; rm -rf tencentcloud-openwrt-plugin-ddns
        # git_clone https://github.com/Tencent-Cloud-Plugins/tencentcloud-openwrt-plugin-cos && mv -n tencentcloud-openwrt-plugin-cos/tencentcloud_cos ./luci-app-tencentcloud-cos; rm -rf tencentcloud-openwrt-plugin-cos
        # git_clone https://github.com/doushang/luci-app-shortcutmenu luci-shortcutmenu && mv -n luci-shortcutmenu/luci-app-shortcutmenu ./ ; rm -rf luci-shortcutmenu
        # git_clone https://github.com/messense/aliyundrive-webdav aliyundrive && mv -n aliyundrive/openwrt/* ./ ; rm -rf aliyundrive
        # git_clone https://github.com/sbilly/netmaker-openwrt && mv -n netmaker-openwrt/netmaker ./; rm -rf netmaker-openwrt
        # git_clone https://github.com/lisaac/luci-app-dockerman dockerman && mv -n dockerman/applications/* ./; rm -rf dockerman
        # ) &
        (
        #git_clone https://github.com/messense/openwrt-wiretrustee && mv -n openwrt-wiretrustee/wiretrustee ./;rm -rf openwrt-wiretrustee
        # git_clone https://github.com/ophub/luci-app-amlogic amlogic && mv -n amlogic/luci-app-amlogic ./;rm -rf amlogic
        # git_clone https://github.com/mingxiaoyu/luci-app-cloudflarespeedtest cloudflarespeedtest && mv -n cloudflarespeedtest/applications/* ./;rm -rf cloudflarespeedtest
        git_clone https://github.com/xiaorouji/openwrt-passwall2 passwall2 && mv -n passwall2/luci-app-passwall2 ./;rm -rf passwall2

        # git_clone https://github.com/messense/aliyundrive-fuse aliyundrive && mv -n aliyundrive/openwrt/* ./;rm -rf aliyundrive
        # git_clone https://github.com/linkease/nas-packages && mv -n nas-packages/{network/services/*,multimedia/*} ./; rm -rf nas-packages
        # git_clone https://github.com/linkease/nas-packages-luci && mv -n nas-packages-luci/luci/* ./; rm -rf nas-packages-luci
        # git_clone https://github.com/linkease/istore && mv -n istore/luci/* ./; rm -rf istore
        ) &
        (
        # git_clone https://github.com/KyleRicardo/MentoHUST-OpenWrt-ipk
        # git_clone https://github.com/frainzy1477/luci-app-clash
        # git_clone https://github.com/peter-tank/luci-app-fullconenat
        git_clone https://github.com/sbwml/openwrt-alist && mvdir openwrt-alist
        # git_clone https://github.com/gSpotx2f/luci-app-log
        # git_clone https://github.com/KFERMercer/luci-app-tcpdump
        # git_clone https://github.com/ykxVK8yL5L/pikpak-webdav pikpak && mv -n pikpak/openwrt/* ./;rm -rf pikpak
        # git_clone https://github.com/jjm2473/openwrt-apps && rm -rf openwrt-apps/{luci-app-cpufreq,luci-app-ota,luci-alias.mk} && sed -i "s/luci-alias.mk/..\/luci.mk/" openwrt-apps/*/Makefile && mvdir openwrt-apps
        ) &
        # (
        # git_clone https://github.com/tty228/luci-app-wechatpush
        # git_clone https://github.com/4IceG/luci-app-modemband modemb  && mv -n modemb/* ./;rm -rf modemb
        # git_clone https://github.com/ZeaKyX/speedtest-web
        # git_clone https://github.com/ZeaKyX/luci-app-speedtest-web
        # git_clone https://github.com/jhonathanc/ps3netsrv-openwrt && mv -n ps3netsrv-openwrt/* ./;rm -rf ps3netsrv-openwrt
        # ) &
        (
        # git_clone https://github.com/honwen/luci-app-aliddns
        # git_clone https://github.com/peter-tank/luci-app-dnscrypt-proxy2
        # git_clone https://github.com/NateLol/luci-app-oled
        # git_clone https://github.com/4IceG/luci-app-3ginfo op3ginfo  && mv -n op3ginfo/{3ginfo,luci-app-3ginfo} ./;rm -rf op3ginfo
        # git_clone https://github.com/sundaqiang/openwrt-packages && mv -n openwrt-packages/luci-* ./; rm -rf openwrt-packages
        git_clone https://github.com/vernesong/OpenClash && mv -n OpenClash/luci-app-openclash ./; rm -rf OpenClash
        # git_clone https://github.com/pymumu/luci-app-smartdns
        # git_clone https://github.com/CHN-beta/rkp-ipid
        # git_clone https://github.com/Erope/openwrt_nezha nezha && mvdir nezha
        ) &
        # (
        # git_clone https://github.com/mchome/openwrt-dogcom
        # git_clone https://github.com/mchome/luci-app-dogcom
        # git_clone https://github.com/koshev-msk/modemfeed && mv -n modemfeed/*/!(telephony)/* ./ && rm -rf modemfeed
        # git_clone https://github.com/zzsj0928/luci-app-pushbot
        # git_clone https://github.com/shanglanxin/luci-app-homebridge
        # git_clone https://github.com/ykxVK8yL5L/luci-app-synology synology && mv -n synology/luci-app-synology ./ && rm -rf synology
        # git_clone https://github.com/htynkn/openwrt-switch-lan-play && mv -n openwrt-switch-lan-play/package/* ./ && rm -rf openwrt-switch-lan-play
        # ) &
        (
        # git_clone https://github.com/linkease/openwrt-app-actions
        git_clone https://github.com/xiaorouji/openwrt-passwall-packages && rm -rf openwrt-passwall-packages/chinadns-ng && mvdir openwrt-passwall-packages
        )
        # ) &
        # (
        # git_clone https://github.com/honwen/luci-app-shadowsocks-rust
        # git_clone https://github.com/Hyy2001X/AutoBuild-Packages && rm -rf AutoBuild-Packages/luci-app-adguardhome && mvdir AutoBuild-Packages
        # git_clone https://github.com/Ausaci/luci-app-nat6-helper
        # git clone https://github.com/gngpp/luci-theme-design -b js --depth 1
        # git_clone https://github.com/derisamedia/luci-theme-alpha
        # git_clone https://github.com/lazywalker/mmdvm-openwrt; rm -rf mmdvm-openwrt/misc; mvdir mmdvm-openwrt
        # ) &
        # (
        # git_clone https://github.com/BoringCat/luci-app-minieap
        # git_clone https://github.com/izilzty/luci-app-chinadns-ng
        # git_clone https://github.com/Diciya/luci-app-broadbandacc
        # git_clone https://github.com/wiwizcom/WiFiPortal && mvdir WiFiPortal
        # git_clone https://github.com/gSpotx2f/luci-app-internet-detector
        # git_clone https://github.com/vinewx/NanoHatOLED; mv NanoHatOLED/nanohatoled ./;rm -rf NanoHatOLED
        # git_clone https://github.com/zerolabnet/luci-app-torbp
        # git_clone https://github.com/muink/luci-app-tinyfilemanager
        # git_clone https://github.com/sbwml/luci-app-airconnect airconnect1 && mv airconnect1/* ./ && rm -rf airconnect1
        # ) &
        # (
        # git clone https://github.com/sirpdboy/luci-theme-kucat -b js --depth 1
        # git_clone https://github.com/blueberry-pie-11/luci-app-natmap
        # git_clone https://github.com/QiuSimons/luci-app-daed-next daed1 && mvdir daed1
        # git_clone https://github.com/sirpdboy/luci-app-netdata
        # git_clone https://github.com/sirpdboy/luci-app-chatgpt-web
        # git_clone https://github.com/sirpdboy/luci-app-eqosplus && rm -rf luci-app-eqosplus/po/zh_Hans
        # git_clone https://github.com/JiaY-shi/fancontrol fanc && mvdir fanc
        # git_clone https://github.com/Siriling/5G-Modem-Support Modem && mvdir Modem;rm -rf rooter
        # ) &
        # (
        # svn export https://github.com/QiuSimons/OpenWrt-Add/trunk/luci-app-irqbalance
        # #svn export https://github.com/xiaoxifu64/immortalwrt/trunk/package/rooter/ext-rooter-basic
        # svn export https://github.com/openwrt/luci/branches/openwrt-22.03/applications/luci-app-wireguard
        # svn export https://github.com/lucikap/Brukamen/trunk/luci-app-ua2f
        # svn export https://github.com/HiGarfield/lede-17.01.4-Mod/trunk/package/extra/luci-app-openvpn-server
        # ) &
        # (
        # git_sparse_clone master "https://github.com/coolsnowwolf/packages" "leanpkg" multimedia/UnblockNeteaseMusic-Go \
        # multimedia/UnblockNeteaseMusic net/amule net/softethervpn5 net/antileech multimedia/gmediarender net/go-aliyundrive-webdav \
        # net/qBittorrent-static net/phtunnel net/frp \
        # net/uugamebooster net/verysync net/vlmcsd net/dnsforwarder net/tcpping net/netatalk net/pgyvpn lang/golang
        # git_sparse_clone openwrt-23.05 "https://github.com/openwrt/packages" "oppackages" \
        # utils/coremark utils/watchcat net/miniupnpd utils/dockerd utils/cgroupfs-mount net/uwsgi net/ddns-scripts net/smartdns net/curl \
        # net/ariang net/rp-pppoe
        # ) &
        # (
        # git_sparse_clone openwrt-23.05 "https://github.com/openwrt/openwrt" "openwrt" \
        # package/base-files package/network/config/firewall4 package/network/config/firewall package/system/opkg package/network/services/ppp \
        # package/network/services/dnsmasq
        # git_sparse_clone openwrt-23.05 "https://github.com/openwrt/luci" "opluci" applications/luci-app-attendedsysupgrade applications/luci-app-aria2 \
        # applications/luci-app-ddns applications/luci-app-acme applications/luci-app-opkg applications/luci-app-firewall \
        # applications/luci-app-ksmbd applications/luci-app-samba4 applications/luci-app-watchcat applications/luci-app-upnp \
        # applications/luci-app-transmission modules/luci-base modules/luci-mod-network \
        # modules/luci-mod-status modules/luci-mod-system
        # ) &

        # (
        # git_sparse_clone openwrt-23.05 "https://github.com/immortalwrt/packages" "immpkgs" net/mwol net/n2n net/dae \
        # net/sub-web net/dnsproxy net/haproxy net/v2raya net/cdnspeedtest net/keepalived \
        # net/go-nats net/go-wol net/bitsrunlogin-go net/transfer net/cloudreve net/daed \
        # net/subconverter net/ngrokc net/oscam net/njitclient net/scutclient net/gost net/ua2f net/dufs net/qBittorrent-Enhanced-Edition \
        # net/tinyportmapper net/tinyfecvpn net/nexttrace net/pcap-dnsproxy net/rustdesk-server net/tuic-server net/speedtest-go \
        # net/dns-forwarder net/ipset-lists net/ShadowVPN net/adguardhome net/cloudflared net/nps \
        # libs/wxbase libs/rapidjson libs/libcron libs/quickjspp libs/toml11 libs/libtorrent-rasterbar \
        # libs/libdouble-conversion libs/qt6base libs/cxxopts libs/jpcre2 libs/alac libs/libcryptopp sound/spotifyd \
        # utils/qt6tools utils/cpulimit utils/sendat utils/exfatprogs utils/filebrowser utils/cups utils/cups-bjnp utils/joker net/udp2raw net/msd_lite \
        # multimedia/you-get multimedia/lux multimedia/ykdl multimedia/gallery-dl devel/go-rice admin/gotop admin/netdata
        # ) &
        # (
        # git_sparse_clone develop "https://github.com/Ysurac/openmptcprouter-feeds" "openmptcp" luci-app-snmpd \
        # luci-app-packet-capture luci-app-mail msmtp luci-app-iperf atinout
        # git_sparse_clone master "https://github.com/xiaoqingfengATGH/feeds-xiaoqingfeng" "xiaoqingfeng" homeredirect luci-app-homeredirect
        # git_sparse_clone master "https://github.com/immortalwrt/immortalwrt" "immortal" \
        # package/kernel/r8168 package/kernel/r8125 package/kernel/rtl8189es package/emortal/autocore package/emortal/automount \
        # package/network/utils/fullconenat package/emortal/cpufreq package/network/utils/fullconenat-nft package/network/utils/nftables \
        # package/utils/mhz package/libs/libnftnl package/firmware/wireless-regdb
        # ) &
        # (
        # git_sparse_clone master "https://github.com/x-wrt/com.x-wrt" "x-wrt" luci-app-macvlan luci-app-xwan
        # ) &
        # git_sparse_clone master "https://github.com/coolsnowwolf/luci" "leluci" applications libs/luci-lib-fs
        # mv -f applications luciapp
        # rm -rf luciapp/{luci-app-qbittorrent,luci-app-cpufreq,luci-app-e2guardian,luci-app-aliyundrive-fuse,luci-app-syncdial}
        # git_sparse_clone master "https://github.com/immortalwrt/luci" "immluci" applications protocols/luci-proto-minieap
        # mv -n applications/* luciapp/; rm -rf applications

        # # 删除 luciapp 中包含超过 3 个文件的子目录
        # for ipk in $(ls -d luciapp/!(luci-app-rclone|luci-app-filebrowser)/); do
        # 	if [[ $(ls $ipk/po | wc -l) -gt 3 ]]; then
        #     rm -rf $ipk
        # 	fi
        # done

        # git_sparse_clone master "https://github.com/coolsnowwolf/lede" "leanlede" package/lean package/qca/shortcut-fe package/network/services/shellsync

    - name: Delete duplicated packages  删除重复的包
      run: |
        shopt -s extglob
        # # 将除了指定的几个子目录之外的所有文件和文件夹移动到当前目录。-n 不覆盖已存在的文件  递归地删除 luciapp 目录及其内容
        # mv -n luciapp/!(luci-app-noddos|luci-app-cshark|luci-app-dnscrypt-proxy|luci-app-https-dns-proxy|luci-app-ssr-mudb-server|luci-app-ledtrig-*) ./ ; rm -Rf luciapp
        # # 将 lean 目录下的所有文件和文件夹移动到当前目录，然后删除 lean 目录
        # mv -n lean/* ./ ; rm -Rf lean
        # # 将 liep 目录下的所有文件和文件夹移动到当前目录，然后删除 liep 目录
        # mv -n liep/* ./ ; rm -Rf liep
        # 将 openwrt-app-actions 目录下的所有文件和文件夹移动到当前目录，然后删除 openwrt-app-actions 目录
        mv -n openwrt-app-actions/applications/* ./;rm -rf openwrt-app-actions
        # 递归地删除所有子目录中的 .git 文件夹
        rm -Rf */.git
        # for pkg in $(ls -d .github/diy/packages/*); do
        #   # 将每个子目录中的 Makefile.k 文件移动到同级目录，并将其重命名为 Makefile。如果移动失败，不显示错误信息
        #   mv -f $pkg/Makefile.k $pkg/Makefile >/dev/null 2>&1 || true
        # done
        # # 递归地复制 .github/diy/packages 目录下的所有文件和文件夹到当前目录。如果复制失败，不显示错误信息。
        # cp -rf .github/diy/packages/* ./ || true
        # for pkg in $(ls -d .github/diy/packages/*); do
        #   mv -f $pkg/Makefile $pkg/Makefile.k >/dev/null 2>&1 || true
        # done


    - name: SSH connection to Actions
      uses: kiddin9/debugger-action@master
      if: github.event.inputs.ssh == 'true'

    # - name: Apply patches 应用修补程序
    #   run: |
    #     # find ".github/diy/patches" -type f -name '*.patch' -print0 | sort -z | xargs -I % -t -0 -n 1 sh -c "cat '%'  | patch -d './' -p1 -E --forward --no-backup-if-mismatch"：这一行执行了以下操作：
    #     # 使用 find 命令查找 .github/diy/patches 目录下的所有以 .patch 结尾的文件。
    #     # 使用 sort 命令按照零字节分隔排序文件列表。
    #     # 使用 xargs 命令逐个处理文件，将每个文件名作为参数传递给后面的命令。
    #     # 在每个文件上执行以下操作：
    #     # 使用 cat 命令将文件内容输出。
    #     # 使用 patch 命令将文件内容应用到当前目录（-d './'）并应用到路径（-p1）。
    #     # 使用 --forward 参数确保只应用新的补丁。
    #     # 使用 --no-backup-if-mismatch 参数以避免备份文件。
    #     # || (curl -k --data chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" --data "text=❌ 软件包更新失败 😂 https://github.com/kiddin9/openwrt-packages/actions" "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage";exit 1)：如果前面的命令失败，执行以下操作：
    #     # 使用 curl 命令向 Telegram 发送一条消息，通知软件包更新失败。
    #     # 使用 exit 1 终止脚本。
    #     find ".github/diy/patches" -type f -name '*.patch' -print0 | sort -z | xargs -I % -t -0 -n 1 sh -c "cat '%'  | patch -d './' -p1 -E --forward --no-backup-if-mismatch" || (curl -k --data chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" --data "text=❌ 软件包更新失败 😂 https://github.com/kiddin9/openwrt-packages/actions" "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage";exit 1)

    # - name: Modify 修改
    #   run: |
    #     shopt -s extglob
    #     set +e
    #     sed -i \
    #     -e "s/\(network\..*\)\.ifname/\1.device/g" \
    #     `find \( -path "*/root/*" -o -path "*/files/*" -o -path "*/luasrc/*" \) ! -path "./base-files/*" ! -path "./dnsmasq/*" ! -path "./luci-base/*" ! -path "./ppp/*" -type f` &
    #     (
    #     function latest() {
    #       (curl -gs -H 'Content-Type: application/json' \
    #          -H "Authorization: Bearer ${{ secrets.TOKEN_KIDDIN9 }}" \
    #          -X POST -d '{ "query": "query {repository(owner: \"'"$1"'\", name: \"'"$2"'\"){latestRelease{tagName tagCommit{oid}}refs(refPrefix:\"refs/tags/\",last:1,orderBy:{field:TAG_COMMIT_DATE,direction:ASC}){edges{node{name target{oid}}}}defaultBranchRef{target{...on Commit {oid}}}}}"}' https://api.github.com/graphql)
    #     }
    #     for pkg in $(ls !(luci-*|cloudflared|dnsproxy|joker|aria2|frp|libcryptopp|toml11|chinadns-ng|ddns-go|libtorrent-rasterbar|ua2f|homebox|xtables-wgobfs|nexttrace|tuic-server|subconverter|softethervpn5|shadowsocksr-libev|mt76|sub-web|mmdvm-host|alist|curl|qBittorrent-Enhanced-Edition|libwxwidgets|ysf-clients|natter|fullconenat|v2raya|r8152|amule|brook|3proxy|containerd|oscam|netmaker|n2n_v2|naiveproxy|miniupnpd-nft|upx|netdata|tailscale|mosdns|r8168|coremark|mbedtls|quickjspp|accel-ppp)/Makefile); do
    #       repo="$(grep PKG_SOURCE_URL $pkg | grep github | cut -f 4-5 -d '/' | sed -e 's/.git//' | grep -E '[0-9a-zA-Z_-]+$')" || true
    #       if [ "$repo" ]; then
    #         owner="$(echo $repo | cut -f 1 -d '/')"
    #         name="$(echo $repo | cut -f 2 -d '/')"
    #         latest="$(latest $owner $name)"
    #         sed -i "s/PKG_SOURCE_VERSION:=.*/PKG_SOURCE_VERSION:=$(echo $latest | jq -r '.data.repository.defaultBranchRef.target.oid')/" $pkg || true
    #         over="$(grep -E PKG_VERSION:=.*$ $pkg | cut -f 2 -d '=' | sed -e 's/^\(v\|release-\)//' | grep -E "[0-9]")" || true
    #         if [ "$over" ]; then
    #           ver="$(echo $latest | jq -r '.data.repository.latestRelease.tagName' | sed -e 's/^\(v\|release-\)//' | grep -E "^[^()]*$" | grep -E "[0-9]")" || true
    #           # [ "$ver" ] || ver="$(git ls-remote --tags git://github.com/$repo | cut -d/ -f3- | sort -t. -nk1,3 | awk '/^[^{]*$/{version=$1}END{print version}' | grep -o -E "[0-9].*")" || true
    #           echo "$repo-$over-$ver"
    #           if [ "$ver" ]; then
    #             function version_lt() { test "$(echo "$@" | tr " " "\n" | sort -rV | head -n 1)" != "$1"; }
    #             if version_lt "$over" "$ver"; then
    #               latest="$(echo $latest | jq -r '.data.repository.latestRelease.tagCommit.oid' || echo $latest | jq -r '.data.repository.refs.edges[-1].node.target.oid')"
    #               sed -i -e "s/PKG_SOURCE_VERSION:=.*/PKG_SOURCE_VERSION:=$latest/" \
    #                      -e "s/PKG_VERSION:=.*/PKG_VERSION:=$ver/" $pkg || true
    #             fi || true
    #           fi
    #         fi
    #       fi
    #     done
    #     touch /tmp/ok
    #     ) &
        
    #     (
    #     for pkg in $(find -maxdepth 1 -type d -name "luci-*" ! -name "luci-app-dockerman" ! -name "luci-app-store"); do
    #       if [ "$(grep "luci.mk" $pkg/Makefile)" ]; then
    #         sed -i '/\(PKG_VERSION\|PKG_RELEASE\):=/d' $pkg/Makefile
    #       fi
    #       grep -q '"nas",' $pkg/luasrc/controller/*.lua && ! grep -q '_("NAS")' $pkg/luasrc/controller/*.lua &&
    #         sed -i 's/ index()/ index()\n\tentry({"admin", "nas"}, firstchild(), _("NAS") , 45).dependent = false/' $pkg/luasrc/controller/*.lua
    #     done
    #     ) &

    #     (
    #     for pkg in $(ls -d */); do
    #       if [[ "$(grep "PKG_VERSION" $pkg/Makefile)" && ! "$(grep "PKG_RELEASE" $pkg/Makefile)" ]]; then
    #         sed -i "s/\(PKG_VERSION:=.*\)/\1\nPKG_RELEASE:=/" $pkg/Makefile || true
    #       fi
    #       if [ "$(grep "PKG_RELEASE" $pkg/Makefile)" ]; then
    #         sed -i "s/PKG_RELEASE:=.*/PKG_RELEASE:=$(git rev-list --count master $pkg)/" $pkg/Makefile || true
    #       fi
    #     done
    #     touch /tmp/ok2
    #     ) &

    #     (
    #     rm -rf luci-app-partexp/po/zh_Hans
    #     bash .github/diy/create_acl_for_luci.sh -a >/dev/null 2>&1 || true
    #     bash .github/diy/convert_translation.sh -a >/dev/null 2>&1 || true
        
    #     #sed -i 's?"http://" + window.location.hostname?window.location.protocol + "//" + window.location.hostname?g' `find luci-app*/luasrc/view/ -maxdepth 2 -name "*.htm"`
    #     sed -i 's/+rclone\( \|$\)/+rclone +fuse-utils\1/g' luci-app-rclone/Makefile
    #     sed -i 's/\(+luci-compat\)/\1 +luci-theme-argon/' luci-app-argon-config/Makefile
    #     sed -i 's/ +uhttpd-mod-ubus//' luci-app-packet-capture/Makefile
    #     sed -i '/boot()/,+2d' ddns-scripts/files/etc/init.d/ddns
    #     sed -i "/DISTRIB_DESCRIPTION/c\DISTRIB_DESCRIPTION=\"%D %C by Kiddin'\"" base-files/files/etc/openwrt_release
    #     sed -i "s/default n/default y/" dockerd/Config.in
    #     sed -i "/+uhttpd/d" ariang/Makefile
    #     sed -i -e '$a /etc/bench.log' \
    #     -e '/\/etc\/profile/d' \
    #     -e '/\/etc\/shinit/d' \
    #     base-files/files/lib/upgrade/keep.d/base-files-essential
    #     sed -i -e '/^\/etc\/profile/d' \
    #     -e '/^\/etc\/shinit/d' \
    #     base-files/Makefile
    #     sed -i '$a cgi-timeout = 300' uwsgi/files-luci-support/luci-webui.ini
    #     sed -i '$a cgi-timeout = 90' uwsgi/files-luci-support/luci-cgi_io.ini
    #     sed -i '/limit-as/c\limit-as = 5000' uwsgi/files-luci-support/luci-webui.ini
    #     sed -i 's/procd_set_param stderr 1/procd_set_param stderr 0/' uwsgi/files/uwsgi.init
    #     sed -i 's/ if aarch64||arm||i386||x86_64//' luci-app-ssr-plus/Makefile
    #     mkdir -p luci-app-passwall/root/www/luci-static/passwall
    #     cp -rf luci-app-bypass/root/www/luci-static/bypass/* luci-app-passwall/root/www/luci-static/passwall/
    #     cp -rf luci-app-bypass/root/usr/share/bypass/GeoLite2-Country.mmdb luci-app-passwall/root/usr/share/passwall/
    #     echo "#page>div[data-v-d324f700]:first-child{display:none}
    #     button.btn_styles.color1[data-v-0d223b54]:last-child{display:none}" >>luci-app-quickstart/htdocs/luci-static/quickstart/style.css
        
    #     sed -i \
    #       -e 's?include \.\./\.\./\(lang\|devel\)?include $(TOPDIR)/feeds/packages/\1?' \
    #       -e "s/\(\(^\| \|	\)\(PKG_HASH\|PKG_MD5SUM\|PKG_MIRROR_HASH\|HASH\):=\).*/\1skip/" \
    #       -e 's?\.\./\.\./luci.mk?$(TOPDIR)/feeds/luci/luci.mk?' \
    #       -e 's/+ca-certificates/+ca-bundle/' \
    #       -e 's/php7/php8/g' \
    #       -e 's/+docker /+docker +dockerd /g' \
    #       -e 's/URL:=@IMMORTALWRT/URL:=https:\/\/mirror2.immortalwrt.org\/sources/g' \
    #       */Makefile
    #     ) &
        
    #     while [[ ! -f /tmp/ok ||  ! -f /tmp/ok2 ]]; do
    #         echo "wait"
    #       sleep 1
    #     done

    - name: Apply 应用
      run: |
        # 定义了一个数组 Emoji，其中包含了多个不同的 emoji 表情
        Emoji=("🎉" "🤞" "✨" "🎁" "🎈" "🎄" "🎨" "💋" "🍓" "🍕" "🍉" "💐" "🌴" "🚀" "🛸" "🗽" "⛅" "🌈" "🔥" "⛄" "🐶" "🏅" "🦄" "🐤")
        # 将当前目录下的所有文件添加到 Git 暂存区
        git add .
        # 创建一个提交，包含了随机选择的 emoji 和当前日期时间作为提交信息
        git commit -m "${Emoji[$[$RANDOM % ${#Emoji[@]}]]} Sync $(date +%Y-%m-%d" "%H:%M:%S)"
        # 遍历 Git 提交中的文件
        for pkg in $(git diff-tree --no-commit-id --name-only HEAD); do
          # 检查每个文件的 Makefile 中是否包含了 PKG_RELEASE 字段
          if [ "$(grep "PKG_RELEASE" $pkg/Makefile)" ]; then
            # 如果包含了 PKG_RELEASE，则使用 sed 命令替换其值为当前 master 分支的提交数
            sed -i "s/PKG_RELEASE:=.*/PKG_RELEASE:=$(git rev-list --count master $pkg)/" $pkg/Makefile || true
          fi
        done
        # 撤销上一次提交，但保留更改
        git reset --soft HEAD^
        git add .
        git commit -m "${Emoji[$[$RANDOM % ${#Emoji[@]}]]} Sync $(date +%Y-%m-%d" "%H:%M:%S)"
        # 强制推送更改到远程仓库
        git push -f

    - name: Delete workflow runs 删除工作流运行
      uses: Mattraks/delete-workflow-runs@main
      continue-on-error: true
      with:
        retain_days: 1
        keep_minimum_runs: 3